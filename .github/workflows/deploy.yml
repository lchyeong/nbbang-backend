name: Docker-based Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nbbang:latest

      - name: Deploy to Server via SSH
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem -tt $USERNAME@$HOST <<EOF
            echo "$SSH_PASSWORD" | sudo -S docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nbbang:latest
            echo "$SSH_PASSWORD" | sudo -S docker run -d -p 8081:8080 --name nbbang_temp --env-file /var/www/nbbang-be/.env ${{ secrets.DOCKER_HUB_USERNAME }}/nbbang:latest

            # 컨테이너 상태 확인
            CONTAINER_STATUS=$(echo "$SSH_PASSWORD" | sudo -S docker inspect -f '{{.State.Status}}' nbbang_temp)

            if [ "\$CONTAINER_STATUS" != "running" ]; then
              echo "nbbang_temp 컨테이너가 시작되지 않음. 상태: \$CONTAINER_STATUS"
              echo "$SSH_PASSWORD" | sudo -S docker logs nbbang_temp || true
              echo "$SSH_PASSWORD" | sudo -S docker rm -f nbbang_temp || true
              echo "New container failed to start, rollback to the existing one"
              exit 1
            fi

            if [ "$(echo "$SSH_PASSWORD" | sudo -S docker ps -q -f name=nbbang)" ]; then
              echo "$SSH_PASSWORD" | sudo -S docker stop nbbang
              echo "$SSH_PASSWORD" | sudo -S docker rm nbbang
            fi

            echo "$SSH_PASSWORD" | sudo -S docker rename nbbang_temp nbbang
            echo "$SSH_PASSWORD" | sudo -S docker update --restart always nbbang
          EOF
          rm private_key.pem
