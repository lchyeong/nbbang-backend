name: Docker-based Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nbbang:latest

      - name: Deploy to Server via SSH
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }} # 비밀번호를 GitHub Secrets에서 가져옴
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem -tt $USERNAME@$HOST <<EOF
            # 비밀번호를 제공하여 sudo 명령어 실행
            echo "$SSH_PASSWORD" | sudo -S docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nbbang:latest
            echo "$SSH_PASSWORD" | sudo -S docker run -d -p 8081:8080 --name nbbang_temp --env-file /var/www/nbbang-be/.env ${{ secrets.DOCKER_HUB_USERNAME }}/nbbang:latest
          
            # 새로운 컨테이너가 정상적으로 실행 중인지 확인
            sleep 10  # 컨테이너가 완전히 시작될 때까지 대기
            if [ "$(echo "$SSH_PASSWORD" | sudo -S docker inspect -f '{{.State.Running}}' nbbang_temp)" = "true" ]; then
              # 기존 컨테이너 중지 및 제거
              if [ "$(echo "$SSH_PASSWORD" | sudo -S docker ps -q -f name=nbbang)" ]; then
                echo "$SSH_PASSWORD" | sudo -S docker stop nbbang
                echo "$SSH_PASSWORD" | sudo -S docker rm nbbang
              fi

              # 임시 컨테이너 이름 변경
              echo "$SSH_PASSWORD" | sudo -S docker rename nbbang_temp nbbang
              echo "$SSH_PASSWORD" | sudo -S docker update --restart always nbbang
            else
              # 새로운 컨테이너가 실패한 경우 롤백
              echo "$SSH_PASSWORD" | sudo -S docker rm -f nbbang_temp
              echo "New container failed to start, rollback to the existing one"
              exit 1
            fi
          EOF
          rm private_key.pem
